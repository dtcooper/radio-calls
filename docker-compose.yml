services:
  backend:
    restart: always
    image: ghcr.io/dtcooper/radio-calls-backend:latest
    build:
      context: backend
      args:
        DEBUG: "${DEBUG:-0}"
    volumes:
      - ./backend/serve:/serve
    env_file: .env
    mem_limit: 2048m
    depends_on:
      - db

  frontend-build:
    restart: on-failure
    image: node:21.7
    environment:
      TZ: "${TZ}"
    command: sh -c "npm install && npm run build"
    working_dir: /app/frontend
    volumes:
      - .:/app
    profiles:
      - build

  nginx:
    restart: always
    image: ghcr.io/dtcooper/nginx-certbot-jinja:5.4.0-nginx1.27.2-alpine
    depends_on:
      - backend
    volumes:
      - ./nginx.conf.j2:/etc/nginx/templates/site.conf.j2
      - ./frontend:/frontend
      - ./backend/serve:/serve
      - nginx_secrets:/etc/letsencrypt
    environment:
      DEBUG: "${DEBUG}"
      TZ: "${TZ}"
      DOMAIN_NAME: "${DOMAIN_NAME}"
      CERTBOT_EMAIL: "${CERTBOT_EMAIL}"
    ports:
      - 80:80
      - 443:443

  db:
    restart: always
    image: pgautoupgrade/pgautoupgrade:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: "${TZ}"

volumes:
  nginx_secrets:
  postgres_data:
